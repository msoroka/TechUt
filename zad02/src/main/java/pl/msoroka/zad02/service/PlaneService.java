package pl.msoroka.zad02.service;

import java.sql.*;

public class PlaneService {
    private final String URL = "jdbc:hsqldb:hsql://localhost/workdb";
    private final Connection connection;
    private final Statement statement;
    private final String CREATE_TABLE_SQL = "CREATE TABLE Plane (id bigint GENERATED BY DEFAULT AS IDENTITY, producer VARCHAR(30), capacity INT, produceDate DATE, combustion DOUBLE)";

    public PlaneService() throws SQLException {
        connection = DriverManager.getConnection(URL);
        statement = connection.createStatement();

        ResultSet rs = connection.getMetaData().getTables(null, null, null, null);

        boolean tableExists = false;

        while (rs.next()) {
            if ("Plane".equalsIgnoreCase(rs.getString("table_name"))) {
                tableExists = true;
            }
        }

        if (tableExists) {
            System.out.println("Table exists");
        } else {
            System.out.println("Table created");
            statement.executeUpdate(CREATE_TABLE_SQL);
        }
    }

    protected void addPlane(String producer, int capacity, Date produceDate, double combustion) throws SQLException{
        String addPlane = "INSERT INTO Plane(producer, capacity, produceDate, combustion) VALUES('Boeing', 150, '2018-01-01', 125.5)";

        String addPlane = "INSERT INTO Plane(producer, capacity, produceDate, combustion) VALUES(" + producer + ", " + capacity + ", " + produceDate + ", " + combustion + ")";

        statement.executeUpdate(addPlane);
    }

    protected void showAllPlanes() throws SQLException {
        String allPlanes = "SELECT * FROM Plane";

        ResultSet rs = statement.executeQuery(allPlanes);

        while(rs.next()) {
            System.out.println(rs.getString("producer") + " " + rs.getDate("produceDate"));
        }
    }

    public static void main(String[] args) throws SQLException {
        PlaneService ps = new PlaneService();

        ps.addPlane("Boeing", 250, new Date(2018, 01, 01), 135.5);

        ps.showAllPlanes();
    }
}
